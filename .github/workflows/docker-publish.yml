# .github/workflows/docker-publish.yml
name: Build and Publish LightRAG Docker Image

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    tags:
      - 'v*.*.*' # Trigger on semantic version tags (e.g., v1.0.0, v1.2.3)
  workflow_dispatch: # Allows manual triggering from the GitHub UI

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name.toLowerCase() }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:v0.13.1

      - name: Login to GitHub Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))) || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:cache,mode=max
          # Pass GitHub secrets as build arguments
          build-args: |
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            NEO4J_PASSWORD=${{ secrets.NEO4J_PASSWORD }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER || 'lightrag_user' }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB || 'lightrag_db' }}
            LLM_MODEL=${{ secrets.LLM_MODEL || 'gpt-4o-mini' }}
            EMBEDDING_MODEL=${{ secrets.EMBEDDING_MODEL || 'text-embedding-3-small' }}
            EMBEDDING_DIM=${{ secrets.EMBEDDING_DIM || '1536' }}

      - name: Generate artifact attestation
        # Only generate attestation if the image was successfully pushed
        if: steps.push.outputs.digest && ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))) || github.event_name == 'workflow_dispatch')
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
